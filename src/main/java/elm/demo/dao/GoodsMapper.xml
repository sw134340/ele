<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="elm.demo.dao.GoodsMapper">
  <resultMap id="BaseResultMap" type="elm.demo.domain.Goods">
    <id column="gid" jdbcType="INTEGER" property="gid" />
    <result column="gname" jdbcType="VARCHAR" property="gname" />
    <result column="ginfo" jdbcType="VARCHAR" property="ginfo" />
    <result column="gphoto" jdbcType="VARCHAR" property="gphoto" />
    <result column="gprice" jdbcType="DOUBLE" property="gprice" />
    <result column="gtid" jdbcType="INTEGER" property="gtid" />
    <result column="gsid" jdbcType="INTEGER" property="gsid" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    gid, gname, ginfo, gphoto, gprice, gtid, gsid, add_time
  </sql>
  <select id="selectByExample" parameterType="elm.demo.domain.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where gid = #{gid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where gid = #{gid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="elm.demo.domain.GoodsExample">
    delete from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="elm.demo.domain.Goods">
    insert into goods (gid, gname, ginfo, 
      gphoto, gprice, gtid, 
      gsid, add_time)
    values (#{gid,jdbcType=INTEGER}, #{gname,jdbcType=VARCHAR}, #{ginfo,jdbcType=VARCHAR}, 
      #{gphoto,jdbcType=VARCHAR}, #{gprice,jdbcType=DOUBLE}, #{gtid,jdbcType=INTEGER}, 
      #{gsid,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="elm.demo.domain.Goods">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gid != null">
        gid,
      </if>
      <if test="gname != null">
        gname,
      </if>
      <if test="ginfo != null">
        ginfo,
      </if>
      <if test="gphoto != null">
        gphoto,
      </if>
      <if test="gprice != null">
        gprice,
      </if>
      <if test="gtid != null">
        gtid,
      </if>
      <if test="gsid != null">
        gsid,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gid != null">
        #{gid,jdbcType=INTEGER},
      </if>
      <if test="gname != null">
        #{gname,jdbcType=VARCHAR},
      </if>
      <if test="ginfo != null">
        #{ginfo,jdbcType=VARCHAR},
      </if>
      <if test="gphoto != null">
        #{gphoto,jdbcType=VARCHAR},
      </if>
      <if test="gprice != null">
        #{gprice,jdbcType=DOUBLE},
      </if>
      <if test="gtid != null">
        #{gtid,jdbcType=INTEGER},
      </if>
      <if test="gsid != null">
        #{gsid,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="elm.demo.domain.GoodsExample" resultType="java.lang.Long">
    select count(*) from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods
    <set>
      <if test="record.gid != null">
        gid = #{record.gid,jdbcType=INTEGER},
      </if>
      <if test="record.gname != null">
        gname = #{record.gname,jdbcType=VARCHAR},
      </if>
      <if test="record.ginfo != null">
        ginfo = #{record.ginfo,jdbcType=VARCHAR},
      </if>
      <if test="record.gphoto != null">
        gphoto = #{record.gphoto,jdbcType=VARCHAR},
      </if>
      <if test="record.gprice != null">
        gprice = #{record.gprice,jdbcType=DOUBLE},
      </if>
      <if test="record.gtid != null">
        gtid = #{record.gtid,jdbcType=INTEGER},
      </if>
      <if test="record.gsid != null">
        gsid = #{record.gsid,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods
    set gid = #{record.gid,jdbcType=INTEGER},
      gname = #{record.gname,jdbcType=VARCHAR},
      ginfo = #{record.ginfo,jdbcType=VARCHAR},
      gphoto = #{record.gphoto,jdbcType=VARCHAR},
      gprice = #{record.gprice,jdbcType=DOUBLE},
      gtid = #{record.gtid,jdbcType=INTEGER},
      gsid = #{record.gsid,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="elm.demo.domain.Goods">
    update goods
    <set>
      <if test="gname != null">
        gname = #{gname,jdbcType=VARCHAR},
      </if>
      <if test="ginfo != null">
        ginfo = #{ginfo,jdbcType=VARCHAR},
      </if>
      <if test="gphoto != null">
        gphoto = #{gphoto,jdbcType=VARCHAR},
      </if>
      <if test="gprice != null">
        gprice = #{gprice,jdbcType=DOUBLE},
      </if>
      <if test="gtid != null">
        gtid = #{gtid,jdbcType=INTEGER},
      </if>
      <if test="gsid != null">
        gsid = #{gsid,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where gid = #{gid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="elm.demo.domain.Goods">
    update goods
    set gname = #{gname,jdbcType=VARCHAR},
      ginfo = #{ginfo,jdbcType=VARCHAR},
      gphoto = #{gphoto,jdbcType=VARCHAR},
      gprice = #{gprice,jdbcType=DOUBLE},
      gtid = #{gtid,jdbcType=INTEGER},
      gsid = #{gsid,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where gid = #{gid,jdbcType=INTEGER}
  </update>



  <resultMap id="BaseResultMapWithObject" type="elm.demo.domain.Goods">
    <id column="gid" jdbcType="INTEGER" property="gid" />
    <result column="gname" jdbcType="VARCHAR" property="gname" />
    <result column="ginfo" jdbcType="VARCHAR" property="ginfo" />
    <result column="gphoto" jdbcType="VARCHAR" property="gphoto" />
    <result column="gprice" jdbcType="DOUBLE" property="gprice" />
    <result column="gtid" jdbcType="INTEGER" property="gtid" />
    <result column="gsid" jdbcType="INTEGER" property="gsid" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <association property="storeinfo" javaType="elm.demo.domain.Storeinfo" select="elm.demo.dao.StoreinfoMapper.selectByPrimaryKey" column="gsid">
      <id property="sid" column="sid"></id>
      <result property="sname" column="sname"></result>
    </association>
    <association property="typeofgoods" javaType="elm.demo.domain.Typeofgoods" select="elm.demo.dao.TypeofgoodsMapper.selectByPrimaryKey" column="gtid">
      <id property="tid" column="tid"></id>
      <result property="tname" column="tname"></result>
    </association>
  </resultMap>
  <select id="selectByExampleWithObject" parameterType="elm.demo.domain.GoodsExample" resultMap="BaseResultMapWithObject">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithObject" parameterType="java.lang.Integer" resultMap="BaseResultMapWithObject">
    select
    <include refid="Base_Column_List" />
    from goods
    where gid = #{gid,jdbcType=INTEGER}
  </select>

</mapper>