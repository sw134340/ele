<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="elm.demo.dao.StoreinfoMapper">
  <resultMap id="BaseResultMap" type="elm.demo.domain.Storeinfo">
    <id column="sid" jdbcType="INTEGER" property="sid" />
    <result column="sname" jdbcType="VARCHAR" property="sname" />
    <result column="spassword" jdbcType="VARCHAR" property="spassword" />
    <result column="sphoto" jdbcType="VARCHAR" property="sphoto" />
    <result column="marking" jdbcType="VARCHAR" property="marking" />
    <result column="dispatching" jdbcType="VARCHAR" property="dispatching" />
    <result column="sadderss" jdbcType="VARCHAR" property="sadderss" />
    <result column="offer" jdbcType="BIT" property="offer" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sid, sname, spassword, sphoto, marking, dispatching, sadderss, offer, add_time
  </sql>
  <select id="selectByExample" parameterType="elm.demo.domain.StoreinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from storeinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from storeinfo
    where sid = #{sid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from storeinfo
    where sid = #{sid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="elm.demo.domain.StoreinfoExample">
    delete from storeinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="elm.demo.domain.Storeinfo">
    insert into storeinfo (sid, sname, spassword, 
      sphoto, marking, dispatching, 
      sadderss, offer, add_time
      )
    values (#{sid,jdbcType=INTEGER}, #{sname,jdbcType=VARCHAR}, #{spassword,jdbcType=VARCHAR}, 
      #{sphoto,jdbcType=VARCHAR}, #{marking,jdbcType=VARCHAR}, #{dispatching,jdbcType=VARCHAR}, 
      #{sadderss,jdbcType=VARCHAR}, #{offer,jdbcType=BIT}, #{addTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="elm.demo.domain.Storeinfo">
    insert into storeinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        sid,
      </if>
      <if test="sname != null">
        sname,
      </if>
      <if test="spassword != null">
        spassword,
      </if>
      <if test="sphoto != null">
        sphoto,
      </if>
      <if test="marking != null">
        marking,
      </if>
      <if test="dispatching != null">
        dispatching,
      </if>
      <if test="sadderss != null">
        sadderss,
      </if>
      <if test="offer != null">
        offer,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="sname != null">
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="spassword != null">
        #{spassword,jdbcType=VARCHAR},
      </if>
      <if test="sphoto != null">
        #{sphoto,jdbcType=VARCHAR},
      </if>
      <if test="marking != null">
        #{marking,jdbcType=VARCHAR},
      </if>
      <if test="dispatching != null">
        #{dispatching,jdbcType=VARCHAR},
      </if>
      <if test="sadderss != null">
        #{sadderss,jdbcType=VARCHAR},
      </if>
      <if test="offer != null">
        #{offer,jdbcType=BIT},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="elm.demo.domain.StoreinfoExample" resultType="java.lang.Long">
    select count(*) from storeinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update storeinfo
    <set>
      <if test="record.sid != null">
        sid = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.sname != null">
        sname = #{record.sname,jdbcType=VARCHAR},
      </if>
      <if test="record.spassword != null">
        spassword = #{record.spassword,jdbcType=VARCHAR},
      </if>
      <if test="record.sphoto != null">
        sphoto = #{record.sphoto,jdbcType=VARCHAR},
      </if>
      <if test="record.marking != null">
        marking = #{record.marking,jdbcType=VARCHAR},
      </if>
      <if test="record.dispatching != null">
        dispatching = #{record.dispatching,jdbcType=VARCHAR},
      </if>
      <if test="record.sadderss != null">
        sadderss = #{record.sadderss,jdbcType=VARCHAR},
      </if>
      <if test="record.offer != null">
        offer = #{record.offer,jdbcType=BIT},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update storeinfo
    set sid = #{record.sid,jdbcType=INTEGER},
      sname = #{record.sname,jdbcType=VARCHAR},
      spassword = #{record.spassword,jdbcType=VARCHAR},
      sphoto = #{record.sphoto,jdbcType=VARCHAR},
      marking = #{record.marking,jdbcType=VARCHAR},
      dispatching = #{record.dispatching,jdbcType=VARCHAR},
      sadderss = #{record.sadderss,jdbcType=VARCHAR},
      offer = #{record.offer,jdbcType=BIT},
      add_time = #{record.addTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="elm.demo.domain.Storeinfo">
    update storeinfo
    <set>
      <if test="sname != null">
        sname = #{sname,jdbcType=VARCHAR},
      </if>
      <if test="spassword != null">
        spassword = #{spassword,jdbcType=VARCHAR},
      </if>
      <if test="sphoto != null">
        sphoto = #{sphoto,jdbcType=VARCHAR},
      </if>
      <if test="marking != null">
        marking = #{marking,jdbcType=VARCHAR},
      </if>
      <if test="dispatching != null">
        dispatching = #{dispatching,jdbcType=VARCHAR},
      </if>
      <if test="sadderss != null">
        sadderss = #{sadderss,jdbcType=VARCHAR},
      </if>
      <if test="offer != null">
        offer = #{offer,jdbcType=BIT},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where sid = #{sid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="elm.demo.domain.Storeinfo">
    update storeinfo
    set sname = #{sname,jdbcType=VARCHAR},
      spassword = #{spassword,jdbcType=VARCHAR},
      sphoto = #{sphoto,jdbcType=VARCHAR},
      marking = #{marking,jdbcType=VARCHAR},
      dispatching = #{dispatching,jdbcType=VARCHAR},
      sadderss = #{sadderss,jdbcType=VARCHAR},
      offer = #{offer,jdbcType=BIT},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where sid = #{sid,jdbcType=INTEGER}
  </update>


  <!--    商家参与活动-->
  <sql id="Extend_Column_List">
    s.sid, s.sname, s.spassword, s.photo, s.marking, s.dispatching, s.sadderss, s.offer,s.add_time as sadd_time
   ,a.aid,a.aname,a.aintor,a.add_time as aadd_time,sta.add_time as staadd_time
  </sql>
  <resultMap id="BaseResultMapWithObject" type="elm.demo.domain.Storeinfo">
    <id column="sid" jdbcType="INTEGER" property="sid" />
    <result column="sname" jdbcType="VARCHAR" property="sname" />
    <result column="spassword" jdbcType="VARCHAR" property="spassword" />
    <result column="sphoto" jdbcType="VARCHAR" property="sphoto" />
    <result column="marking" jdbcType="VARCHAR" property="marking" />
    <result column="dispatching" jdbcType="VARCHAR" property="dispatching" />
    <result column="sadderss" jdbcType="VARCHAR" property="sadderss" />
    <result column="offer" jdbcType="BIT" property="offer" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <collection property="active" ofType="elm.demo.domain.Active">
      <id property="aid" column="aid"></id>
      <result property="aname" column="aname"></result>
    </collection>
  </resultMap>
  <select id="selectByExampleWithObject" parameterType="elm.demo.domain.StoreinfoExample"
          resultMap="BaseResultMapWithObject">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Extend_Column_List"/>
    from storeinfo s
    left join st_ac sta on s.sid=sta.fsid
    left join activie a on sta.faid = a.aid
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithObject" parameterType="java.lang.Integer" resultMap="BaseResultMapWithObject">
    select
    <include refid="Extend_Column_List"/>
    from storeinfo s
    where sid = #{sid,jdbcType=INTEGER}
  </select>
</mapper>